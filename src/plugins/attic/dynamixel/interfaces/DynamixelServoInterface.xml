<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE interface SYSTEM "interface.dtd">
<interface name="DynamixelServoInterface" author="Tim Niemueller, Nicolas Limpert" year="2015">
  <constants>
    <enum name="ErrorCode">
      <comment>Error code to explain an error</comment>
      <item name="ERROR_NONE" value="0">No error occured.</item>
      <item name="ERROR_UNSPECIFIC" value="1">Some unspecified error occured.</item>
      <item name="ERROR_COMMUNICATION" value="2">
	Communication with device failed.
      </item>
      <item name="ERROR_ANGLE_OUTOFRANGE" value="4">
	Desired angle is out of range.
      </item>
    </enum>
    <enum name="WorkingMode">
      <comment>Mode to be set for the servo</comment>
      <item name="JOINT" value="0">Joint mode to move in a range of -2.616 to +2.616 rad.</item>
      <item name="WHEEL" value="1">Wheel mode to use the servo in a continuously rotating mode.
      The rotation speed is set by bits 0-9 in the goal speed setting. Bit 10 of the goal speed setting sets the desired rotation direction, 0 for CCW direction turn and 1 for CW direction turn.</item>
    </enum>
  </constants>
  <data>
    <comment>
      Interface to access Robotis Dynamixel Servos.
    </comment>
    <!-- Raw data output from servo -->
    <field type="string" name="model" length="8">Model if known</field>
    <field type="uint32" name="model_number">Model number</field>
    <field type="uint32" name="cw_angle_limit">Clockwise angle limit</field>
    <field type="uint32" name="ccw_angle_limit">Counter-clockwise angle limit</field>
    <field type="uint8"  name="temperature_limit">Temperature limit</field>
    <field type="uint32" name="max_torque">Max torque</field>
    <field type="uint8"  name="cw_margin">CW Compliance Margin</field>
    <field type="uint8"  name="ccw_margin">CCW Compliance Margin</field>
    <field type="uint8"  name="cw_slope">CW Compliance Slope</field>
    <field type="uint8"  name="ccw_slope">CCW Compliance Slope</field>
    <field type="uint32" name="goal_position">Goal position</field>
    <field type="uint32" name="goal_speed">Goal speed</field>
    <field type="uint32" name="torque_limit">Torque limit</field>
    <field type="uint32" name="position">Present position</field>
    <field type="uint32" name="speed">Present speed</field>
    <field type="uint32" name="load">Present load</field>
    <field type="uint8"  name="voltage">Present voltage</field>
    <field type="uint8"  name="temperature">Present temperature</field>
    <field type="uint32" name="punch">Punch</field>
    <field type="uint8"  name="alarm_shutdown">Alarm Shutdown.
      The bitmask is set as follows (taken from Trossen Robotics PDF "AX-12(English).pdf"):
      Bit 7: 0
      Bit 6: If set to 1, torque off when an Instruction Error occurs
      Bit 5: If set to 1, torque off when an Overload Error occurs
      Bit 4: If set to 1, torque off when a Checksum Error occurs
      Bit 3: If set to 1, torque off when a Range Error occurs
      Bit 2: If set to 1, torque off when an Overheating Error occurs
      Bit 1: If set to 1, torque off when an Angle Limit Error occurs
      Bit 0: If set to 1, torque off when an Input Voltage Error occurs
    </field>
    <field type="uint8"  name="error">Raw error code from servo.
      The bitmask is set as follows (taken from Trossen Robotics PDF "AX-12(English).pdf"):
      Bit 7: 0
      Bit 6: Set to 1 if an undefined instruction is sent or an action instruction is sent without a Reg_Write instruction.
      Bit 5: Set to 1 if the specified maximum torque can't control the applied load.
      Bit 4: Set to 1 if the checksum of the instruction packet is incorrect.
      Bit 3: Set to 1 if the instruction sent is out of the defined range.
      Bit 2: Set to 1 if the internal temperature of the Dynamixel unit is above the operating temperature range as defined in the control table.
      Bit 1: Set as 1 if the Goal Position is set outside of the range between CW Angle Limit and CCW Angle Limit.
      Bit 0: Set to 1 if the voltage is out of the operating voltage range as defined in the control table.
    </field>
    <field type="bool" name="enable_prevent_alarm_shutdown">Enable alarm shutdown</field>

    <!-- Values converted to useful units -->
    <field type="float"  name="angle">Current angle.</field>
    <field type="bool"   name="enabled">Is the servo enabled?</field>
    <field type="float"  name="min_angle">Minimum angle allowed.</field>
    <field type="float"  name="max_angle">Maximum angle allowed.</field>
    <field type="float"  name="max_velocity">Maximum supported velocity.</field>
    <field type="float"  name="velocity">Maximum servo velocity currently reached.</field>
    <field type="string" name="mode" length="5">Working mode, can either be JOINT or WHEEL</field>
    <field type="float"  name="angle_margin">
      Margin in radians around a target servo value to consider the
      motion as final.
    </field>
    <field type="bool" name="autorecover_enabled">Automatically recover on alarm shutdown</field>

    <!-- Actuation command feedback -->
    <field type="uint32" name="msgid">The ID of the message that is currently being
      processed, or 0 if no message is being processed.</field>
    <field type="bool" name="final">True, if the last goto command has been finished,
      false if it is still running</field>
    <field type="ErrorCode" name="error_code">Failure code set if
    final is true. ERROR_NONE if no error occured.</field>
  </data>

  <!-- Motion commands -->
  <message name="Stop">
    <comment>Stop motion immediately.</comment>
  </message>
  <message name="Flush">
    <comment>Flush the message queue. This implicitly stops running motions.</comment>
  </message>
  <message name="Goto">
    <comment>Goto desired angle value.</comment>
    <ref>angle</ref>
  </message>
  <message name="TimedGoto">
    <comment>
      Goto desired angle value in a specified time.
    </comment>
    <field type="float" name="time_sec">Time in seconds when to reach
    the final position.</field>
    <ref>angle</ref>
  </message>
  <message name="SetMode">
    <comment>Set working mode</comment>
    <field type="uint8" name="mode">New mode, see the enum WorkingMode in this interface</field>
  </message>
  <message name="SetSpeed">
    <comment>Set speed</comment>
    <field type="uint16" name="speed">New speed. Used when the servo is in wheel mode. Bits 0-9 determine the rotation speed and bit 10 determines the rotation direction (0 for ccw and 1 for cw)</field>
  </message>

  <!-- Parameter setting, higher level with SI units -->
  <message name="SetEnabled">
    <comment>Enable or disable motors/servos.</comment>
    <ref>enabled</ref>
  </message>
  <message name="SetVelocity">
    <comment>Set maximum velocity for servo.</comment>
    <ref>velocity</ref>
  </message>
  <message name="SetMargin">
    <comment>Set margins servo unit motions.</comment>
    <ref>angle_margin</ref>
  </message>

  <!-- Parameter setting, low level -->
  <message name="SetComplianceValues">
    <comment>Set compliance values</comment>
    <field type="uint8" name="cw_margin">New CW compliance margin</field>
    <field type="uint8" name="ccw_margin">New CCW compliance margin</field>
    <field type="uint8" name="cw_slope">New CW compliance slope</field>
    <field type="uint8" name="ccw_slope">New LED enabled value</field>
  </message>
  <message name="SetGoalSpeed">
    <comment>Set goal speed</comment>
    <field type="uint32" name="goal_speed">New goal speed</field>
  </message>
  <message name="SetTorqueLimit">
    <comment>Set torque limit</comment>
    <field type="uint32" name="torque_limit">New torque limit</field>
  </message>
  <message name="SetPunch">
    <comment>Set punch</comment>
    <field type="uint32" name="punch">New punch</field>
  </message>
  <message name="GotoPosition">
    <comment>Goto position</comment>
    <field type="uint32" name="position">New position</field>
  </message>
  <message name="SetAngleLimits">
    <comment>Set angle limits</comment>
    <field type="uint32" name="angle_limit_cw">New cw angle limit</field>
    <field type="uint32" name="angle_limit_ccw">New ccw angle limit</field>
  </message>
  <message name="ResetRawError">
    <comment>Reset raw error of servo in interface</comment>
  </message>
  <message name="SetPreventAlarmShutdown">
    <comment>Enable or disable the prevent alarm shutdown functionality</comment>
    <ref>enable_prevent_alarm_shutdown</ref>
  </message>
  <message name="SetAutorecoverEnabled">
    <comment>Enable or disable the autorecover functionality</comment>
    <ref>autorecover_enabled</ref>
  </message>
  <message name="Recover">
    <comment>Manually initiate a recovery</comment>
  </message>
</interface>
